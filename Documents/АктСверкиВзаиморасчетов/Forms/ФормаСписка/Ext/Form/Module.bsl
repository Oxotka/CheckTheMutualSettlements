
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура Сверка_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьВыполнениеПослеОбработчиковСобытия("ПослеПриСозданииНаСервере");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сверка_КомандаПечатьАктаСверки(Команда)
	
	ВыполнитьКомандуПечати(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Сверка_АктСверкиСальдоПоДоговорамСПечатьюИПодписью(Команда)
	
	ВыполнитьКомандуПечати(Истина);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПослеПриСозданииНаСервере(Отказ, СтандартнаяОбработка, ДополнительныйПараметр)
	
	Элементы.ГруппаПечать.Вид = ВидГруппыФормы.Подменю;
	// Проверим, нужно ли отображать кнопку печати с печатью и подписью.
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.АктСверкиВзаиморасчетов.ПФ_MXL_АктСверки");
	Элементы.ФормаАктСверкиСальдоПоДоговорамСПечатьюИПодписью.Видимость = 
		(Макет.Области.Найти("ПодвалСПечатьюИПодписью") <> Неопределено);

КонецПроцедуры

&НаКлиенте
Функция ОбъектыПечати()

	Результат = Новый Массив;
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл
		Если ТипЗнч(ВыделеннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Продолжить;
		КонецЕсли;
		ТекущаяСтрока = Элементы.Список.ДанныеСтроки(ВыделеннаяСтрока);
		Если ТекущаяСтрока <> Неопределено Тогда
			Результат.Добавить(ТекущаяСтрока.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПодготовитьПараметрыПечатиАктаСверкиНаСервере(Знач ОбъектыПечати, Знач СПечатью)
	
	Возврат Обработки.Сверка_СлужебнаяОбработка.ПодготовитьПараметрыПечатиАктаСверкиНаСервере(ОбъектыПечати, СПечатью);
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьКомандуПечати(СПечатью)

	// Собираем данные формы для печати текущего состояния
	ОбъектыПечати = ОбъектыПечати();
	ПараметрыПечатиАктСверки = ПодготовитьПараметрыПечатиАктаСверкиНаСервере(ОбъектыПечати, СПечатью);
	
	Если ПараметрыПечатиАктСверки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Отдаем данные обработке печати
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Обработка.Сверка_СлужебнаяОбработка", "АктСверки", ПараметрыПечатиАктСверки.ОбъектыПечати,
		ЭтотОбъект, ПараметрыПечатиАктСверки.ПараметрыПечати);

КонецПроцедуры

#КонецОбласти